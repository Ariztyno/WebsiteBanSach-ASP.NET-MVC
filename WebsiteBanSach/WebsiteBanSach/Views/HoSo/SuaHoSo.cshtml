@model WebsiteBanSach.Models.User
@using (Html.BeginForm("EditProfile", "HoSo", FormMethod.Post, new { @id = "demo-form2", @class = "form-horizontal form-label-left" }))
{
    @Html.AntiForgeryToken()

    <div class="">
        @if (@ViewBag.Error != null)
        {
            <h3 class="alert alert-danger">@ViewBag.Error</h3><br />
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12" style="display:-webkit-box;">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                Ảnh cũ @Model.Avatar
                <img src="@Url.Content("~/Areas/Admin/Content/build/images/"+ @Model.Avatar)" align="middle" width="100" />
                chọn ảnh mới
                <input type="file" name="fileUpload" />
                @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                @Html.DropDownListFor(m => m.Gender, new SelectList(new[]
                        {
                            new SelectListItem { Value = null, Text = "Chưa xác định" },
                            new SelectListItem { Value = false.ToString(), Text = "Nam" },
                            new SelectListItem { Value = true.ToString(), Text = "Nữ" },
                        },
                        "Value",
                        "Text"
                        ),
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row no-print">
            <div class="col-xs-12">
                <div class="form-group">
                    <button class="btn btn-default" type="submit" style="background-color:#ff2400; color:white; margin-top:12px;font-size: 25px;padding-left: 10px;padding-right: 10px;"><i class="fa fa-edit"></i>  Sửa</button>
                </div>
            </div>
        </div>

        <div class="form-group" style="visibility: hidden">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12" style="display:-webkit-box;">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="visibility: hidden">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12" style="display:-webkit-box;">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group" style="visibility: hidden">
        @Html.LabelFor(model => model.UserGroupID, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
            @Html.EditorFor(model => model.UserGroupID, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    
}
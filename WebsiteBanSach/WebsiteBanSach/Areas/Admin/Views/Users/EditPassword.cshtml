@model WebsiteBanSach.Models.User

@{
    ViewBag.Title = "EditPassword";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@{
    if (ViewBag.Permission == null)
    {
        Response.Redirect("/Admin/loi/Er403");
    }
}

<!-- page content -->
<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left" style="font-size:25px">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Admin/trang-chu">Trang chủ</a></li>
                        @if (Model.UserGroupID != "Member")
                        {
                            <li class="breadcrumb-item"><a href="/Admin/trang-chu/nguoi-dung/danh-sach-quan-tri-vien">Danh sách quản trị viên</a></li>
                        }
                        else
                        {
                            if (Model.UserGroupID != "StandbyAccount")
                            {
                                <li class="breadcrumb-item"><a href="/Admin/trang-chu/nguoi-dung/danh-sach-nguoi-dung-chua-co-nhom">Danh sách người dùng chưa có nhóm</a></li>
                            }
                            else
                            {
                                <li class="breadcrumb-item"><a href="/Admin/trang-chu/nguoi-dung/danh-sach-khach-hang">Danh sách khách hàng</a></li>
                            }
                        }
                        <li class="breadcrumb-item"><a href="/Admin/trang-chu/nguoi-dung/ho-so-nguoi-dung-@Model.ID">Hồ sơ người dùng @Model.ID</a></li>
                        <li class="breadcrumb-item"><a href="/Admin/trang-chu/nguoi-dung/sua-mat-khau-nguoi-dung-@Model.ID">Sửa mật khẩu</a></li>
                    </ol>
                </nav>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Sửa mật khẩu của người dùng @Model.ID</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li>
                                <a class="close-link"><i class="fa fa-close"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <br />
                        <!--nếu tài khoản đang đăng nhập vô trang sửa mật khẩu này-->
                        @if (Model.ID == int.Parse(Session["ID"].ToString()))
                        {
                            using (Html.BeginForm("EditPassword", "Users", FormMethod.Post, new { @id = "demo-form2", @class = "form-horizontal form-label-left" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="">
                                    @if (@ViewBag.Error != null)
                                    {
                                        <h3 class="alert alert-danger">@ViewBag.Error</h3>
                                    }
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.ID)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", @id = "Password", @style = "margin-right:15px;" } })
                                            <div><button class="btn btn-default" id="random" type="button" style="background-color:#5a738e; color:white;"><i class="fa fa-random"></i> tạo mật khẩu ngẫu nhiên</button></div>

                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Nhập lại mật khẩu</label>
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display: -webkit-box;">
                                            <input class="form-control col-md-7 col-xs-12" data-val="true" data-val-length="Mật khẩu không được dài hơn 12 ký tự" data-val-length-max="12" data-val-required="Không được để trống mật khẩu" id="confirmpassword" name="confirmpassword" placeholder="Nhập lại mật khẩu" onfocus="this.placeholder=''" onblur="this.placeholder='Nhập lại mật khẩu'" type="password" />
                                            <span class="field-validation-valid text-danger" data-valmsg-for="confirmpassword" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="row no-print">
                                    <div class="col-xs-12">
                                        <div class="form-group">
                                            <button class="btn btn-default" type="submit" style="background-color:#ff2400; color:white; margin-top:12px"><i class="fa fa-edit"></i>  Sửa</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            using (Html.BeginForm("EditPassword", "Users", FormMethod.Post, new { @id = "demo-form2", @class = "form-horizontal form-label-left" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="">
                                    @if (@ViewBag.Error != null)
                                    {
                                        <h3 class="alert alert-danger">@ViewBag.Error</h3>
                                    }
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.ID)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", @id = "Password", @style = "margin-right:15px; visibility:hidden;" } })
                                            <div><button class="btn btn-default" id="random" type="button" style="background-color:#5a738e; color:white;"><i class="fa fa-random"></i> tạo mật khẩu ngẫu nhiên</button></div>

                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display:-webkit-box;">
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group" style="visibility:hidden;">
                                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Nhập lại mật khẩu</label>
                                        <div class="col-md-3 col-sm-3 col-xs-12" style="display: -webkit-box;">
                                            <input class="form-control col-md-7 col-xs-12" data-val="true" data-val-length="Mật khẩu không được dài hơn 12 ký tự" data-val-length-max="12" data-val-required="Không được để trống mật khẩu" id="confirmpassword" name="confirmpassword" placeholder="Nhập lại mật khẩu" onfocus="this.placeholder=''" onblur="this.placeholder='Nhập lại mật khẩu'" type="password" />
                                            <span class="field-validation-valid text-danger" data-valmsg-for="confirmpassword" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="row no-print">
                                    <div class="col-xs-12">
                                        <div class="form-group">
                                            <button class="btn btn-default" type="submit" style="background-color:#ff2400; color:white; margin-top:12px"><i class="fa fa-edit"></i>  Sửa</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        <div class="row no-print">
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <a href="/Admin/trang-chu/nguoi-dung/ho-so-nguoi-dung-@Model.ID"><button class="btn btn-primary pull-left" style="margin-right: 5px;"><i class="fa fa-backward"></i> Trở về</button></a>
                                    <a href="/Admin/trang-chu/nguoi/xoa-@Model.ID"><button class="btn btn-primary pull-left" style="margin-right: 5px;"><i class="fa fa-times"></i> Xóa</button></a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- page content -->
@section scripts
{
    <!-- Datatables -->
    <script src="/Areas/Admin/Content/vendors/datatables.net/js/jquery.dataTables.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-buttons-bs/js/buttons.bootstrap.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-buttons/js/buttons.flash.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-buttons/js/buttons.html5.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-buttons/js/buttons.print.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-fixedheader/js/dataTables.fixedHeader.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-keytable/js/dataTables.keyTable.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-responsive-bs/js/responsive.bootstrap.js"></script>
    <script src="/Areas/Admin/Content/vendors/datatables.net-scroller/js/dataTables.scroller.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/jszip/dist/jszip.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/pdfmake/build/pdfmake.min.js"></script>
    <script src="/Areas/Admin/Content/vendors/pdfmake/build/vfs_fonts.js"></script>
    <script>
        $("#random").click(function () {
            var n = $("#confirmpassword").val();
            n = Math.random().toString(36).substring(2, 15);
            update(n);
        });

        function update(n) {
            $("#confirmpassword").val(n);
            $("#Password").val(n);
        }
    </script>
}

